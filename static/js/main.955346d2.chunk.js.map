{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","redux/phoneBook/phoneBook-actions.js","redux/phoneBook/phoneBook-operations.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/App/App.jsx","redux/phoneBook/phoneBook-reducer.js","redux/store.js","index.js"],"names":["module","exports","fetchContactsFulfilled","createAction","fetchContactsPending","fetchContactsRejected","addNewContactFulfilled","addNewContactPending","addNewContactRejected","removeContactFulfilled","removeContactPending","removeContactRejected","filteringValue","axios","defaults","baseURL","connect","allContacts","contacts","items","dispatch","addContact","contactName","contactNumber","name","number","a","newContact","createdAt","Date","id","shortid","generate","post","then","data","setError","error","useState","setName","setNumber","handleChange","e","target","value","className","styles","form","onSubmit","preventDefault","some","contact","toLowerCase","type","pattern","title","required","onChange","placeholder","Styles","styled","div","filterValue","filter","cbRemoveContact","delete","catch","message","removeContact","fetchAllContacts","get","console","log","useEffect","handleClick","map","style","textTransform","onClick","filterInputValue","filterInputOnChange","App","createReducer","_","payload","state","isLoading","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","phoneBookReducer","devTools","process","getState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.955346d2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3cYML\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__FPxfg\"};","import { createAction } from '@reduxjs/toolkit';\r\n// import shortid from 'shortid';\r\n\r\n\r\nexport const fetchContactsFulfilled = createAction('contacts/fetchFulfilled');\r\nexport const fetchContactsPending = createAction('contacts/fetchPending');\r\nexport const fetchContactsRejected = createAction('contacts/fetchRejected');\r\n\r\nexport const addNewContactFulfilled = createAction('contacts/addContactFulfilled');\r\nexport const addNewContactPending = createAction('contacts/addContactPending');\r\nexport const addNewContactRejected = createAction('contacts/addContactRejected');\r\n\r\nexport const removeContactFulfilled = createAction('contacts/removeContactFulfilled');\r\nexport const removeContactPending = createAction('contacts/removeContactPending');\r\nexport const removeContactRejected = createAction('contacts/removeContactRejected');\r\n\r\n// export const getFilteredContactsFulfilled = createAction('contacts/getFilteredContactsFulfilled');\r\n// export const getFilteredContactsPending = createAction('contacts/getFilteredContactsPending');\r\n// export const getFilteredContactsRejected = createAction('contacts/getFilteredContactsRejected');\r\n\r\n\r\nconst filteringValue = createAction('contacts/changeFilter');\r\n\r\n// eslint-disable-next-line\r\nexport default filteringValue;\r\n\r\n","import axios from 'axios';\r\nimport shortid from 'shortid';\r\n\r\nimport {\r\n  fetchContactsFulfilled,\r\n  fetchContactsPending,\r\n  fetchContactsRejected,\r\n  addNewContactFulfilled,\r\n  addNewContactPending,\r\n  addNewContactRejected,\r\n  removeContactFulfilled,\r\n  removeContactPending,\r\n  removeContactRejected,\r\n  // getFilteredContactsFulfilled,\r\n  // getFilteredContactsPending,\r\n  // getFilteredContactsRejected\r\n} from './phoneBook-actions';\r\n\r\naxios.defaults.baseURL = 'https://61956d5874c1bd00176c6d57.mockapi.io/contacts'\r\n\r\nexport const fetchContacts = (filterValue) => async dispatch => {\r\n  dispatch(fetchContactsPending());\r\n\r\n  try {\r\n    const { data } = await axios.get(`/contacts?name=${filterValue}`);\r\n    console.log(\"response is\", data);\r\n    dispatch(fetchContactsFulfilled(data));\r\n  } catch (error) {\r\n    dispatch(fetchContactsRejected(error));\r\n  }\r\n};\r\n\r\nexport const addNewContact = (name, number) => async dispatch => {\r\n\r\n  const newContact = {\r\n    name,\r\n    number,\r\n    createdAt: new Date(),\r\n    id: shortid.generate(),\r\n  }\r\n\r\n  dispatch(addNewContactPending());\r\n  try {\r\n    // const { data } = await axios.get('/contacts');\r\n    // data\r\n    //   .some((contact) => contact.name.toLowerCase() === newContact.name.toLowerCase()) ? new Error(`${newContact.name} is already in contacts`) :\r\n    await  axios.post('/contacts', newContact).then(({data})=>dispatch(addNewContactFulfilled(data)))\r\n  } catch (error) {\r\n    dispatch(addNewContactRejected(error))\r\n  }  \r\n}\r\n\r\nexport const removeContact = id => async dispatch => {\r\n  dispatch(removeContactPending());\r\n  await axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(({ data }) => dispatch(removeContactFulfilled(data)))\r\n    .catch(error => removeContactRejected(error.message))\r\n}\r\n\r\n// export const getFilteredContacts = (filterValue) => async dispatch =>{\r\n//   await axios\r\n//     .get(`/contacts?name=cool%20${filterValue}`)\r\n//     .then(({ data }) => {\r\n//       dispatch(getFilteredContactsFulfilled(data));\r\n//       console.log(\"getFilteredContacts response is\", data);\r\n//     })\r\n//   .catch((error)=>dispatch(getFilteredContactsRejected(error)))\r\n// }\r\n\r\n// export default { fetchContacts, addNewContact }\r\n\r\n","import { useState} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import shortid from \"shortid\";\r\nimport { connect } from \"react-redux\";\r\n// import phoneBookActions from '../../redux/phoneBook/phoneBook-actions'\r\nimport { addNewContact } from \"../../redux/phoneBook/phoneBook-operations\";\r\nimport { addNewContactRejected } from \"../../redux/phoneBook/phoneBook-actions\";\r\nimport styles from \"./ContactForm.module.css\";\r\n\r\nfunction ContactForm ({allContacts, addContact, setError}) {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value)\r\n        break;\r\n    case \"number\":\r\n        setNumber(value)\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    allContacts\r\n      .some((contact) => contact.name.toLowerCase() === name.toLowerCase())\r\n      ? setError(`${name} is already in contacts`)\r\n      : addContact(name, number);\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n    return (\r\n      <form className={styles.form} onSubmit={handleSubmit}>\r\n        <label>\r\n          <p>Name</p>\r\n          <input\r\n            className=\"input\"\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            onChange={handleChange}\r\n            placeholder=\"Enter new contact name\"\r\n          />\r\n        </label>\r\n        <label>\r\n          <p>Number</p>\r\n          <input\r\n            className=\"input\"\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять из цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            onChange={handleChange}\r\n            placeholder=\"Enter new contact number\"\r\n          />\r\n        </label>\r\n        <button className=\"button\" type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = ({contacts:{items}}) => ({\r\n  allContacts: items,\r\n  // error\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  addContact: (contactName, contactNumber) =>\r\n    dispatch(addNewContact(contactName, contactNumber)),\r\n  setError: (error)=>dispatch(addNewContactRejected(error)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n\r\nContactForm.propTypes = {\r\n  addContact: PropTypes.func.isRequired,\r\n};\r\n\r\n","// import PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n// import phoneBookActions from '../../redux/phoneBook/phoneBook-actions';\r\nimport styled from 'styled-components';\r\nimport { useEffect } from 'react';\r\nimport {fetchContacts, removeContact} from '../../redux/phoneBook/phoneBook-operations';\r\n\r\nconst Styles = styled.div`\r\n  .selector1 {\r\n    position: relative;\r\n    width: 95%;\r\n    border-collapse: collapse;\r\n    margin: 20px auto;\r\n    overflow: scroll;\r\n  }\r\n  .selector2 {\r\n    position: sticky;\r\n    background-color: rgb(63, 207, 243);\r\n    text-transform: uppercase;\r\n    color: #fff;\r\n  }\r\n  .selector3 {\r\n    line-height: 2;\r\n    border: 1px solid burlywood;\r\n    text-align: center;\r\n  }\r\n`;\r\nfunction ContactList(\r\n  { cbRemoveContact,\r\n    filterValue,\r\n    // filteredContacts,\r\n    allContacts,\r\n    fetchAllContacts,\r\n    // getFilteredContacts\r\n  }) {\r\n  useEffect(() => {\r\n    fetchAllContacts(filterValue);\r\n    // eslint-disable-next-line\r\n  }, [filterValue]);\r\n\r\n  // useEffect(() => {\r\n  //   // if (!filterValue) { return }\r\n  //   getFilteredContacts(filterValue)\r\n  //   // eslint-disable-next-line\r\n  // },[filterValue])\r\n\r\n  console.log(allContacts);\r\n\r\n  const handleClick = e => cbRemoveContact(e.target.id);\r\n  return (\r\n    <Styles>\r\n      <table className=\"selector1\">\r\n        <thead className=\"selector2\">\r\n          <tr>\r\n            <th className=\"selector3\">Name</th>\r\n            <th className=\"selector3\">Phone Number</th>\r\n            <th className=\"selector3\">Etc.</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {\r\n          //allContacts &&\r\n            allContacts.map(({ id, name, number }) => (\r\n              <tr key={id}>\r\n                <td\r\n                  className=\"selector3\"\r\n                  style={{ textTransform: 'capitalize' }}\r\n                >\r\n                  {name}\r\n                </td>\r\n                <td className=\"selector3\">{number}</td>\r\n                <td className=\"selector3\">\r\n                  <button\r\n                    className=\"button\"\r\n                    type=\"button\"\r\n                    onClick={handleClick}\r\n                    id={id}\r\n                  >\r\n                    Delete contact\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n        </tbody>\r\n      </table>\r\n    </Styles>\r\n  );\r\n}\r\n\r\n// const getFilteredContacts = (allContacts, filterValue) => {\r\n//   // const normalizeFilter = filterValue.toLowerCase();\r\n//   return allContacts.filter(({ name }) =>\r\n//     name.toLowerCase().includes(filterValue.toLowerCase()),\r\n//   );\r\n// };\r\n\r\nconst mapStateToProps = ({\r\n  contacts: {\r\n    items,\r\n    filter,\r\n  },\r\n}) => ({\r\n  // filteredContacts: getFilteredContacts(items, filter),\r\n  allContacts: items,\r\n  filterValue:filter\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  cbRemoveContact: id => dispatch(removeContact(id)),\r\n  fetchAllContacts: (filter) => dispatch(fetchContacts(filter)),\r\n  // getFilteredContacts: (filterValue)=>dispatch(getFilteredContacts(filterValue))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n\r\n// ContactList.propTypes = {\r\n//   contacts: PropTypes.arrayOf(\r\n//     PropTypes.shape({\r\n//       id: PropTypes.string.isRequired,\r\n//       name: PropTypes.string.isRequired,\r\n//       number: PropTypes.string.isRequired,\r\n//     }),\r\n//   ),\r\n//   cbRemoveContact: PropTypes.func.isRequired,\r\n//   fetchAllContacts:PropTypes.func.isRequired,\r\n// };\r\n\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport filteringValue from \"../../redux/phoneBook/phoneBook-actions\";\r\n\r\nimport styles from \"./Filter.module.css\";\r\n\r\nFilter.propTypes = {\r\n  filterInputValue: PropTypes.string,\r\n  filterInputOnChange: PropTypes.func.isRequired,\r\n};\r\n\r\nfunction Filter({ filterInputValue, filterInputOnChange }) {\r\n  return (\r\n    <label className={styles.filter}>\r\n      <p className=\"label\">Find contacts by name</p>\r\n      <input\r\n        className=\"input\"\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={filterInputValue}\r\n        onChange={filterInputOnChange}\r\n        placeholder=\"Enter query name\"\r\n      />\r\n    </label>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = ({contacts:{filter}}) => ({\r\n  filterInputValue: filter,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  filterInputOnChange: (e) => dispatch(filteringValue(e.target.value))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","// import { useEffect } from 'react';\r\n// import fetchContacts from '../../redux/phoneBook/phoneBook-operations';\r\n// import { connect } from \"react-redux\";\r\nimport ContactForm from \"../ContactForm/ContactForm\";\r\nimport ContactList from \"../ContactList/ContactList\";\r\nimport Filter from \"../Filter/Filter\";\r\n\r\n\r\nimport \"./App.css\";\r\n\r\nfunction App() { //App({fetchAllContacts}) {\r\n  // useEffect(() => {\r\n  //     console.log('APP DID MOUNT :>> ');\r\n  //   fetchAllContacts();\r\n  //   // eslint-disable-next-line\r\n  //   }, [])\r\n  \r\n     return (\r\n      <div className=\"App\">\r\n        <h1>PhoneBook</h1>\r\n        <ContactForm />\r\n        <h2>Contacts</h2>\r\n        <div className=\"Contacts\">\r\n          <Filter />\r\n          <ContactList/>\r\n          </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n//   const mapDispatchToProps = dispatch => ({  \r\n//   fetchAllContacts: ()=>dispatch(fetchContacts())\r\n// });\r\n\r\nexport default App;//connect(null, mapDispatchToProps)(App)\r\n\r\n\r\n\r\n// // ---Repeta's App.js\r\n// import React from 'react';\r\n// import { Switch, Route, Link } from 'react-router-dom';\r\n// import TodosView from './views/TodosView';\r\n\r\n// const App = () => (\r\n//   <>\r\n//     <ul>\r\n//       <li>\r\n//         <Link to=\"/todos\">Заметки</Link>\r\n//       </li>\r\n//     </ul>\r\n\r\n//     <Switch>\r\n//       <Route path=\"/todos\">\r\n//         <TodosView />\r\n//       </Route>\r\n//     </Switch>\r\n//   </>\r\n// );\r\n\r\n// export default App;\r\n\r\n\r\n// // ---Repeta's TodosView.js\r\n// import React, { Component } from 'react';\r\n// import { connect } from 'react-redux';\r\n// import Container from '../components/Container';\r\n// import TodoList from '../components/TodoList';\r\n// import TodoEditor from '../components/TodoEditor';\r\n// import Filter from '../components/TodoFilter';\r\n// import Stats from '../components/Stats';\r\n// import Modal from '../components/Modal';\r\n// import IconButton from '../components/IconButton';\r\n// import { ReactComponent as AddIcon } from '../icons/add.svg';\r\n// import todosOperations from '../redux/todos/todos-operations';\r\n\r\n// const barStyles = {\r\n//   display: 'flex',\r\n//   alignItems: 'flex-end',\r\n//   marginBottom: 20,\r\n// };\r\n\r\n// class TodosView extends Component {\r\n//   state = {\r\n//     showModal: false,\r\n//   };\r\n\r\n//   componentDidMount() {\r\n//     this.props.fetchTodos();\r\n//   }\r\n\r\n//   toggleModal = () => {\r\n//     this.setState(({ showModal }) => ({\r\n//       showModal: !showModal,\r\n//     }));\r\n//   };\r\n\r\n//   render() {\r\n//     const { showModal } = this.state;\r\n\r\n//     return (\r\n//       <Container>\r\n//         <div style={barStyles}>\r\n//           <Filter />\r\n//           <Stats />\r\n//           <IconButton onClick={this.toggleModal} aria-label=\"Добавить todo\">\r\n//             <AddIcon width=\"40\" height=\"40\" fill=\"#fff\" />\r\n//           </IconButton>\r\n\r\n//           {this.props.isLoadingTodos && <h1>Загружаем...</h1>}\r\n//         </div>\r\n\r\n//         <TodoList />\r\n\r\n//         {showModal && (\r\n//           <Modal onClose={this.toggleModal}>\r\n//             <TodoEditor onSave={this.toggleModal} />\r\n//           </Modal>\r\n//         )}\r\n//       </Container>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// const mapStateToProps = state => ({\r\n//   isLoadingTodos: state.todos.loading,\r\n// });\r\n\r\n// const mapDispatchToProps = dispatch => ({\r\n//   fetchTodos: () => dispatch(todosOperations.fetchTodos()),\r\n// });\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(TodosView);\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport filteringValue from './phoneBook-actions' \r\nimport {\r\n  fetchContactsFulfilled,\r\n  fetchContactsPending,\r\n  fetchContactsRejected,\r\n  addNewContactFulfilled,\r\n  addNewContactPending,\r\n  addNewContactRejected,\r\n  removeContactFulfilled,\r\n  removeContactPending,\r\n  removeContactRejected,\r\n  // getFilteredContactsFulfilled,\r\n  // getFilteredContactsRejected\r\n} from './phoneBook-actions';\r\n\r\nconst items = createReducer([], {\r\n  [fetchContactsFulfilled]: (_, {payload})=>payload,\r\n  [addNewContactFulfilled]: (state, { payload }) => [...state, payload],\r\n  [removeContactFulfilled]: (state, {payload}) =>\r\n    state.filter(({ id }) => id !== payload.id),\r\n  // [getFilteredContactsFulfilled]: (_, {payload})=>payload,\r\n})\r\n\r\nconst isLoading = createReducer(false, {\r\n  [fetchContactsPending]: () => true,\r\n  [fetchContactsFulfilled]: () => false,\r\n  [fetchContactsRejected]: () => false,\r\n  [addNewContactPending]: () => true,\r\n  [addNewContactFulfilled]: () => false,\r\n  [addNewContactRejected]: () => false,\r\n  [removeContactPending]: () => true,\r\n  [removeContactFulfilled]: () => false,\r\n  [removeContactRejected]:()=>false,\r\n})\r\n\r\nconst filter = createReducer('',\r\n  {\r\n    [filteringValue]: (_, { payload }) => payload,\r\n  }\r\n)\r\n\r\nconst error = createReducer(null, {\r\n  [fetchContactsRejected]: (_, { payload }) => payload,\r\n  [fetchContactsPending]: () => null,\r\n  [fetchContactsFulfilled]: ()=> null,\r\n  [addNewContactRejected]: (_, { payload }) => payload,\r\n  [addNewContactPending]: ()=> null,\r\n  [addNewContactFulfilled]: ()=> null,\r\n  [removeContactRejected]: (_, { payload }) => payload,\r\n  [removeContactPending]: () => null,\r\n  [removeContactFulfilled]: () => null,\r\n  // [getFilteredContactsRejected]: (_, { payload }) => payload,\r\n  // [getFilteredContactsFulfilled]: () => null,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  error,\r\n  isLoading\r\n});\r\n\r\n\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {  \r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport phoneBookReducer from './phoneBook/phoneBook-reducer';\r\n\r\nconst middleware = [...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  })]\r\n\r\nconst store = configureStore({\r\n  reducer: {contacts: phoneBookReducer},\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development'\r\n},\r\n)\r\n\r\n// eslint-disable-next-line\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from 'react-redux';\r\n// import { PersistGate } from \"redux-persist/integration/react\";\r\nimport App from \"./components/App/App.jsx\";\r\nimport store from './redux/store';\r\n\r\nimport \"./index.css\";\r\n\r\nconsole.log('store :>> ', store.getState());\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      {/* <PersistGate loading=\"Loading state...\" persistor={store.persister}> */}\r\n      <App />\r\n      {/* </PersistGate> */}\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n\r\n// import React from 'react';\r\n// import ReactDOM from 'react-dom';\r\n// import { BrowserRouter } from 'react-router-dom';\r\n// import { Provider } from 'react-redux';\r\n// // import { PersistGate } from 'redux-persist/integration/react';\r\n// import App from './App';\r\n// import store from './redux/store';\r\n// import 'modern-normalize/modern-normalize.css';\r\n// import './styles/base.scss';\r\n\r\n// ReactDOM.render(\r\n//   <React.StrictMode>\r\n//     <Provider store={store}>\r\n//       {/* <PersistGate loading={null} persistor={store.persistor}> */}\r\n//       <BrowserRouter>\r\n//         <App />\r\n//       </BrowserRouter>\r\n//       {/* </PersistGate> */}\r\n//     </Provider>\r\n//   </React.StrictMode>,\r\n//   document.getElementById('root'),\r\n// );"],"sourceRoot":""}